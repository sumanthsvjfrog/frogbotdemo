name: "Frogbot Scan and Fix"
on:
  workflow_dispatch:
    # Creating fix pull requests will be triggered by any push to one of the these branches .
    # You can add or replace to any branch you want to open fix pull requests for.
permissions:
  contents: write
  pull-requests: write
  security-events: write
  id-token: write
jobs:
  scan-repository:
    runs-on: ubuntu-24.04
    # defaults:
    #   run:
    #     working-directory: python-example/pip-example
    steps:
      - uses: actions/checkout@v4
        # with:
        #   repository: jfrog/project-examples
        #   sparse-checkout: |
        #     python-example/pip-example
      # Install prerequisites
      - name: Setup Node npm
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          
      - uses: jfrog/frogbot@v2
        with:
          oidc-provider-name: destgithub
          oidc-audience: frogoidc
        env:
          # [Mandatory]
          # JFrog platform URL
          JF_URL: https://${{ vars.JF_URL }}/

          # [Mandatory if JF_USER and JF_PASSWORD are not provided]
          # JFrog access token with 'read' permissions on Xray service
          # JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

          # [Mandatory]
          # The GitHub token automatically generated for the job
          JF_GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # Uncomment the below options if you'd like to use them.

          # [Optional, default: https://api.github.com]
          # API endpoint to GitHub
          # JF_GIT_API_ENDPOINT: https://github.example.com

          # [Mandatory if JF_ACCESS_TOKEN is not provided]
          # JFrog username with 'read' permissions for Xray. Must be provided with JF_PASSWORD
          # JF_USER: ${{ secrets.JF_USER }}

          # [Mandatory if JF_ACCESS_TOKEN is not provided]
          # JFrog password. Must be provided with JF_USER
          # JF_PASSWORD: ${{ secrets.JF_PASSWORD }}
